class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans=new ArrayList<>();
        Queue<TreeNode> queue=new LinkedList<TreeNode>();
        if(root==null)
            return ans;
        boolean flag=false;
        queue.add(root);
        while (!queue.isEmpty())
        {
            int length=queue.size();
            List<Integer> sublist=new ArrayList<>();
            for(int i=0;i<length;i++)
            {
                //TreeNode node=queue.poll();
                if(queue.peek().left!=null)
                    queue.offer(queue.peek().left);
                if(queue.peek().right!=null)
                    queue.offer(queue.peek().right);
                if(flag)
                {
                    sublist.add(0,queue.poll().val);
                }
                else
                {
                    sublist.add(queue.poll().val);
                }
            }
            ans.add(sublist);
            flag=!flag;  
        }
        return ans;
    }
}
