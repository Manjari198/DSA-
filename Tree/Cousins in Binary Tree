class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        if(root==null)
            return false;
        Queue<TreeNode> q=new LinkedList<TreeNode>();
        q.offer(root);
        while(!q.isEmpty())
        {
            int len=q.size();
            boolean isXexist=false;
            boolean isYexist=false;
            
            for(int i=0;i<len;i++)
            {
                TreeNode node=q.poll();
                if(node.val==x)
                    isXexist=true;
                if(node.val==y)
                    isYexist=true;
                
                if(node.left!=null && node.right!=null)
                {
                    if(node.left.val==x && node.right.val==y)
                    {
                        return false;
                    }
                    if(node.left.val==y && node.right.val==x)
                    {
                        return false;
                    }
                }
                if(node.left!=null)
                {
                    q.offer(node.left);
                }
                if(node.right!=null)
                {
                    q.offer(node.right);
                }
            }
            if(isXexist && isYexist)
            {
                return true;
            }
        }
        return false;
    }
}
