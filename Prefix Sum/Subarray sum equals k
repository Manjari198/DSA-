class Solution {
    public int subarraySum(int[] nums, int k) {
        /*int curr_sum=nums[0],start=0,count=0;
        for(int i=1;i<=nums.length;i++)
        {
            while(curr_sum>k)
            {
                curr_sum-=nums[start];
                start++;
            }
            if(curr_sum==k)
            {
                count+=1;
            }
            if(i<nums.length)
            {
                curr_sum+=nums[i];
            }
            
        }
        return count;*/
        
        HashMap<Integer,Integer> map=new HashMap<>();
        map.put(0,1);
        int sum=0,count=0;
        for(int i=0;i<nums.length;i++)
        {
            sum+=nums[i];
            if(map.containsKey(sum-k))
            {
                count+=map.get(sum-k);
            }
            map.put(sum,map.getOrDefault(sum,0)+1);
        }
        return count;
    }
}
